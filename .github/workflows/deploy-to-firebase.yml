name: Deploy Firebase ðŸ”¥

on:
  push:
    branches:
      - develop
      - master

jobs:
  deployment:
    runs-on: ubuntu-latest
    environment: 
      name: staging
    strategy:
      matrix:
        node-version: [15.x]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install dependencies
      run: npm install
    - name: Create .env
      run: |
        touch .env &&
        echo "ENVIRONMENT=${ENVIRONMENT}" > .env
        echo "FIREBASE_API_KEY=${FIREBASE_API_KEY}" >> .env
        echo "FIREBASE_AUTH_DOMAIN=${FIREBASE_AUTH_DOMAIN}" >> .env
        echo "FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}" >> .env
        echo "FIREBASE_STORAGE_BUCKET=${FIREBASE_STORAGE_BUCKET}" >> .env
        echo "FIREBASE_MESSAGING_SENDER_ID=${FIREBASE_MESSAGING_SENDER_ID}" >> .env
        echo "FIREBASE_APP_ID=${FIREBASE_APP_ID}" >> .env
      env:
        ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
        FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
        FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
        FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
        FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
        FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
    - name: Build Web Application 
      run: |
        npm run build
    - name: Firebase Setup
      uses: pocket-apps/action-setup-firebase@v2
      with:
          firebase-token: ${{ secrets.FIREBASE_TOKEN }}
    - name: Firebase Deploy ðŸ”¥
      run: npm run firebase:deploy